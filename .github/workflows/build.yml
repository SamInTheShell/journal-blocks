name: Build and Release

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  release:
    types: [ published ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            artifact_name: linux
          - os: windows-latest
            platform: win
            artifact_name: windows
          - os: macos-latest
            platform: mac
            artifact_name: macos

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Set version (timestamp-based)
      run: npm run set-version

    - name: Build application
      run: npm run build

    - name: Build Electron app
      run: npm run build:${{ matrix.platform }}
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}-build
        path: |
          dist-electron/*.exe
          dist-electron/*.dmg
          dist-electron/*.zip
          dist-electron/*.AppImage
          dist-electron/*.tar.gz
          dist-electron/*.deb
          dist-electron/*.rpm
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Set version (timestamp-based)
      run: npm run set-version

    - name: Build application
      run: npm run build

    - name: Release to GitHub
      run: npm run build:electron
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

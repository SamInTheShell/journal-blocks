name: Build Application

on:
  workflow_call:
    inputs:
      version:
        required: false
        type: string
        default: ''
    secrets:
      GH_TOKEN:
        required: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            artifact_name: linux
          - os: windows-latest
            platform: win
            artifact_name: windows
          - os: macos-latest
            platform: mac
            artifact_name: macos

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        always-auth: false

    - name: Install dependencies
      run: npm ci

    - name: Fix Rollup dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        npm rebuild rollup
        npm install @rollup/rollup-linux-x64-gnu
        npm cache clean --force
        npm ci

    - name: Fix Rollup dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        npm rebuild rollup
        npm install @rollup/rollup-win32-x64-msvc
        npm cache clean --force
        npm ci

    - name: Fix Rollup dependencies (Mac)
      if: matrix.os == 'macos-latest'
      run: node -e "
        const arch = process.arch;
        console.log('Detected architecture:', arch);
        
        require('child_process').execSync('npm rebuild rollup', {stdio: 'inherit'});
        
        if (arch === 'arm64') {
          console.log('Installing ARM64 version for Mac');
          require('child_process').execSync('npm install @rollup/rollup-darwin-arm64', {stdio: 'inherit'});
        } else {
          console.log('Installing x64 version for Mac');
          require('child_process').execSync('npm install @rollup/rollup-darwin-x64', {stdio: 'inherit'});
        }
        
        require('child_process').execSync('npm cache clean --force', {stdio: 'inherit'});
        require('child_process').execSync('npm ci', {stdio: 'inherit'});
      "

    - name: Set version
      run: node -e "
        const version = '${{ inputs.version }}';
        if (version && version.trim()) {
          require('child_process').execSync('npm run set-version \"' + version + '\"', {stdio: 'inherit'});
        } else {
          require('child_process').execSync('npm run set-version', {stdio: 'inherit'});
        }
      "

    - name: Build application
      run: node -e "
        try {
          require('child_process').execSync('npm run build', {stdio: 'inherit'});
        } catch (error) {
          console.log('Standard build failed, trying alternative approach...');
          
          // Remove node_modules and package-lock.json (cross-platform)
          const fs = require('fs');
          const path = require('path');
          
          if (fs.existsSync('node_modules')) {
            fs.rmSync('node_modules', {recursive: true, force: true});
          }
          if (fs.existsSync('package-lock.json')) {
            fs.unlinkSync('package-lock.json');
          }
          
          require('child_process').execSync('npm install', {stdio: 'inherit'});
          require('child_process').execSync('npm run build', {stdio: 'inherit'});
        }
      "
      env:
        # Force npm to use the correct platform for optional dependencies
        npm_config_platform: ${{ matrix.platform }}
        npm_config_arch: x64

    - name: Build Electron app
      run: npm run build:${{ matrix.platform }}
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}-build
        path: |
          dist-electron/*.exe
          dist-electron/*.dmg
          dist-electron/*.zip
          dist-electron/*.AppImage
          dist-electron/*.tar.gz
          dist-electron/*.deb
          dist-electron/*.rpm
        retention-days: 30
